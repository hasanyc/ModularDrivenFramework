<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="4" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="39590" started-at="2016-07-21T20:20:33Z" finished-at="2016-07-21T20:21:12Z">
    <groups>
    </groups>
    <test name="FF Test" duration-ms="39590" started-at="2016-07-21T20:20:33Z" finished-at="2016-07-21T20:21:12Z">
      <class name="TestMyAccount.MyAccount_TransferMoney">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:TestMyAccount.MyAccount_TransferMoney@2d554825]" name="beforeSuite" is-config="true" duration-ms="19" started-at="2016-07-21T16:20:33Z" finished-at="2016-07-21T16:20:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:TestMyAccount.MyAccount_TransferMoney@2d554825]" name="setUp" is-config="true" duration-ms="9784" started-at="2016-07-21T16:20:33Z" finished-at="2016-07-21T16:20:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestMyAccount.MyAccount_TransferMoney.myAccount_TransferMoneyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="myAccount_TransferMoneyTest()[pri:0, instance:TestMyAccount.MyAccount_TransferMoney@2d554825]" name="myAccount_TransferMoneyTest" duration-ms="1" started-at="2016-07-21T16:20:42Z" finished-at="2016-07-21T16:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccount_TransferMoneyTest -->
        <test-method status="PASS" signature="browserClose(java.lang.reflect.Method)[pri:0, instance:TestMyAccount.MyAccount_TransferMoney@2d554825]" name="browserClose" is-config="true" duration-ms="37" started-at="2016-07-21T16:20:42Z" finished-at="2016-07-21T16:20:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestMyAccount.MyAccount_TransferMoney.myAccount_TransferMoneyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserClose -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:TestMyAccount.MyAccount_TransferMoney@2d554825]" name="tearDown" is-config="true" duration-ms="608" started-at="2016-07-21T16:21:12Z" finished-at="2016-07-21T16:21:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- TestMyAccount.MyAccount_TransferMoney -->
      <class name="TestMyAccount.SkipATest">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:TestMyAccount.SkipATest@3567135c]" name="setUp" is-config="true" duration-ms="9636" started-at="2016-07-21T16:21:02Z" finished-at="2016-07-21T16:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestMyAccount.SkipATest.skippingTEST()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="SKIP" signature="skippingTEST()[pri:0, instance:TestMyAccount.SkipATest@3567135c]" name="skippingTEST" duration-ms="30" started-at="2016-07-21T16:21:12Z" finished-at="2016-07-21T16:21:12Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping test]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping test
	at TestMyAccount.SkipATest.skippingTEST(SkipATest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skippingTEST -->
        <test-method status="PASS" signature="browserClose(java.lang.reflect.Method)[pri:0, instance:TestMyAccount.SkipATest@3567135c]" name="browserClose" is-config="true" duration-ms="29" started-at="2016-07-21T16:21:12Z" finished-at="2016-07-21T16:21:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestMyAccount.SkipATest.skippingTEST()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserClose -->
      </class> <!-- TestMyAccount.SkipATest -->
      <class name="TestMyAccount.MyAccount_CheckBalance">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:TestMyAccount.MyAccount_CheckBalance@68837a77]" name="setUp" is-config="true" duration-ms="9462" started-at="2016-07-21T16:20:42Z" finished-at="2016-07-21T16:20:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestMyAccount.MyAccount_CheckBalance.myAccount_CheckBalanceTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="myAccount_CheckBalanceTest(java.lang.reflect.Method)[pri:0, instance:TestMyAccount.MyAccount_CheckBalance@68837a77]" name="myAccount_CheckBalanceTest" duration-ms="368" started-at="2016-07-21T16:20:52Z" finished-at="2016-07-21T16:20:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestMyAccount.MyAccount_CheckBalance.myAccount_CheckBalanceTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- myAccount_CheckBalanceTest -->
        <test-method status="PASS" signature="browserClose(java.lang.reflect.Method)[pri:0, instance:TestMyAccount.MyAccount_CheckBalance@68837a77]" name="browserClose" is-config="true" duration-ms="39" started-at="2016-07-21T16:20:52Z" finished-at="2016-07-21T16:20:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestMyAccount.MyAccount_CheckBalance.myAccount_CheckBalanceTest(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserClose -->
      </class> <!-- TestMyAccount.MyAccount_CheckBalance -->
      <class name="TestMyAccount.FailTEST">
        <test-method status="PASS" signature="setUp(java.lang.String, java.lang.reflect.Method)[pri:0, instance:TestMyAccount.FailTEST@6be46e8f]" name="setUp" is-config="true" duration-ms="10087" started-at="2016-07-21T16:20:52Z" finished-at="2016-07-21T16:21:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[FF]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void TestMyAccount.FailTEST.failTestTesting(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="failTestTesting(java.lang.reflect.Method)[pri:0, instance:TestMyAccount.FailTEST@6be46e8f]" name="failTestTesting" duration-ms="46" started-at="2016-07-21T16:21:02Z" finished-at="2016-07-21T16:21:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestMyAccount.FailTEST.failTestTesting(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at TestMyAccount.FailTEST.failTestTesting(FailTEST.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.TestNG.privateMain(TestNG.java:1355)
	at org.testng.TestNG.main(TestNG.java:1324)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTestTesting -->
        <test-method status="PASS" signature="browserClose(java.lang.reflect.Method)[pri:0, instance:TestMyAccount.FailTEST@6be46e8f]" name="browserClose" is-config="true" duration-ms="42" started-at="2016-07-21T16:21:02Z" finished-at="2016-07-21T16:21:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void TestMyAccount.FailTEST.failTestTesting(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserClose -->
      </class> <!-- TestMyAccount.FailTEST -->
    </test> <!-- FF Test -->
  </suite> <!-- Suite -->
</testng-results>
